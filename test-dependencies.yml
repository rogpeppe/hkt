---
version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.4.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-1:
    image: confluentinc/cp-kafka:5.4.1
    depends_on:
      - zookeeper-1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schemaregistry-1:8084
      KAFKA_SSL_CLIENT_AUTH: none
    # Refer to fgeller/kt to configure with SSL support
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-secrets/:/etc/kafka/secrets

  schemaregistry-1:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schemaregistry-1
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
        - 8084:8084
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry-1
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8084
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:29092
